from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from src.db.db_manager import DBManager
from src.keyboards.cart import cart_keyboard
from src.states.cart import CartAdd

router = Router()
db = DBManager()


@router.callback_query(F.data.startswith("cart:add:"))
async def handle_add_to_cart(callback: CallbackQuery, state: FSMContext):
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (–≤ –∫–≥) –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É.
    """
    product_id = int(callback.data.split(":")[2])
    await state.update_data(product_id=product_id)
    await state.set_state(CartAdd.quantity)
    await callback.message.answer("–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (–≤ –∫–≥):")
    await callback.answer()


@router.message(CartAdd.quantity)
async def handle_quantity_input(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É (–≤ –ë–î).
    """
    try:
        qty = float(message.text.replace(",", "."))
        if qty <= 0:
            raise ValueError
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1.5)")
        return

    data = await state.get_data()
    product_id = data.get("product_id")
    telegram_id = message.from_user.id

    db.add_to_cart(telegram_id, product_id, qty)
    await message.answer("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É!")
    await state.clear()


@router.message(F.text == "üß∫ –ö–æ—Ä–∑–∏–Ω–∞")
async def show_cart_message(message: Message, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–∑ –ë–î).
    """
    telegram_id = message.from_user.id
    cart = db.get_cart(telegram_id)

    if not cart:
        await message.answer("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ üß∫")
        return

    msg = "<b>üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:</b>\n\n"
    total = 0

    for pid, qty in cart.items():
        product = db.get_product_by_id(pid)
        if product:
            subtotal = round(product.price * qty, 2)
            total += subtotal
            msg += f"{product.name} x {round(qty, 2)} –∫–≥ = {subtotal}‚ÇΩ\n"

    msg += f"\n<b>–ò—Ç–æ–≥–æ: {round(total, 2)}‚ÇΩ</b>"

    await message.answer(msg, reply_markup=cart_keyboard())


@router.callback_query(F.data == "cart:clear")
async def handle_clear_cart(callback: CallbackQuery, state: FSMContext):
    """
    –û—á–∏—â–∞–µ—Ç –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î.
    """
    telegram_id = callback.from_user.id
    db.clear_cart(telegram_id)
    await callback.message.answer("–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞ üßπ")
    await callback.answer()
